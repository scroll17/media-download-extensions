{"version":3,"sources":["components/Login/Login.module.sass","components/ControlComponents/Instagram/Instagram.module.sass","components/Main/Main.module.sass","App.module.sass","images/user-default.png","components/Login/Login.js","components/ControlComponents/Instagram/Instagram.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","setLogin","useState","error","setError","input","setInput","checkPassword","isNotLocal","inputs","split","length","bit","localStorage","setItem","JSON","stringify","useLayoutEffect","localPassword","parse","getItem","Array","isArray","join","className","style","login","src","userDefault","alt","icon","inputBlock","value","onChange","e","target","type","onClick","log","console","document","addEventListener","chrome","tabs","executeScript","code","body","innerHTML","results","Instagram","lVideo","setLVideo","lStory","setLStory","placeHolder","text","placeholder","container","Switch","checked","window","removeEventListener","Main","structure","result","setPath","this","forEach","item","title","path","gradient","push","background","list","originPath","slice","clearPath","app","marginLeft","cursor","structureParser","main","switch","Component","App","state","isLogined","setState","bind","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f35afed6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3a0U5\",\"error\":\"Login_error__1A00_\",\"icon\":\"Login_icon__2CZ4w\",\"inputBlock\":\"Login_inputBlock__16maY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Instagram_container__1cI-T\",\"placeholder\":\"Instagram_placeholder__hXKYE\",\"text\":\"Instagram_text__1eWQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"Main_app__1Cfxv\",\"list\":\"Main_list__1llTM\",\"item\":\"Main_item__3I0fM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1ChP5\"};","module.exports = __webpack_public_path__ + \"static/media/user-default.b6ebd5a8.png\";","import React, { useState, useLayoutEffect } from 'react';\r\nimport style from './Login.module.sass';\r\n\r\nimport userDefault from '../../images/user-default.png';\r\n\r\nfunction Login(props){\r\n    const { setLogin } = props;\r\n    const [ error, setError ] = useState(false);\r\n    const [ input, setInput ] = useState('');\r\n    \r\n    const inputPassword = (e) => {\r\n        if(error) setError(false);\r\n        return setInput(e.target.value)\r\n    }\r\n\r\n    const checkPassword = (isNotLocal = true) => {\r\n        const inputs = input.split(';');\r\n        if( inputs.length < 2 ){\r\n            return setError('Invalid password');\r\n        }\r\n\r\n        let bit = ~ +inputs[0] << 361 >>> 19 & inputs[1];\r\n        if( bit === 738 ){\r\n            isNotLocal && localStorage.setItem('_x-sad--passord', JSON.stringify(inputs))\r\n            return setLogin(true);\r\n        }else{\r\n            return setError('Invalid password');\r\n        }\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        const localPassword = JSON.parse(localStorage.getItem('_x-sad--passord'));\r\n        if( Array.isArray(localPassword) ){\r\n            setInput(localPassword.join(';'))\r\n            checkPassword(false);\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className={style.login}>\r\n            <img src={userDefault} alt='user-default.jpg' className={style.icon}/>\r\n            <div className={style.inputBlock}>\r\n                <input \r\n                    value={input} \r\n                    onChange={inputPassword}\r\n                    type='password'\r\n                />\r\n                <i \r\n                    className=\"far fa-arrow-alt-circle-right\" \r\n                    onClick={checkPassword}\r\n                />\r\n            </div>\r\n            {\r\n                error && <span className={style.error}>{error}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","/*global chrome*/\r\nimport React, { useState } from 'react';\r\nimport style from './Instagram.module.sass';\r\n\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nimport { donwloadVideo, donwloadStory } from '../../../API/Instagram/load';\r\n\r\nfunction log(){\r\n    console.log('click')\r\n}\r\n\r\ndocument.addEventListener('dblclick', () => {\r\n    console.log(\"Popup DOM fully loaded and parsed\");\r\n\r\n    function modifyDOM() {\r\n        //You can play with your DOM here or check URL against your regex\r\n        console.log('Tab script:');\r\n        console.log(document.body);\r\n        return document.body.innerHTML;\r\n    }\r\n\r\n    //We have permission to access the activeTab, so we can call chrome.tabs.executeScript:\r\n    chrome.tabs.executeScript({\r\n        code: '(' + modifyDOM + ')();' //argument here is a string but function.toString() returns function's code\r\n    }, (results) => {\r\n        //Here we have just the innerHTML and not DOM structure\r\n        console.log('Popup script:')\r\n        console.log(results[0]);\r\n    });\r\n});\r\n\r\nfunction Instagram(props){\r\n    const [lVideo, setLVideo] = useState(false);\r\n    const [lStory, setLStory] = useState(false);\r\n\r\n    const setDonwloadVideo = () => {\r\n        if(lVideo){\r\n            window.addEventListener('dblclick', log);\r\n        }else{\r\n            window.removeEventListener('dblclick', log)\r\n        }\r\n        return setLVideo(lVideo => !lVideo);\r\n    };\r\n\r\n    const setDonwloadStory = () => {\r\n        if(lStory){\r\n            window.addEventListener('dblclick', log);\r\n        }else{\r\n            window.removeEventListener('dblclick', log)\r\n        }\r\n        return setLStory(lStory => !lStory);\r\n    };\r\n\r\n\r\n    const placeHolder = (text) => {\r\n        return(\r\n            <span className={style.placeholder}>\r\n                {text}\r\n            </span>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className={style.container}>\r\n            <div>\r\n                <span className={style.text}>\r\n                    Donwload video\r\n                </span>\r\n                <Switch\r\n                    checked={lVideo}\r\n                    onChange={() => setDonwloadVideo()}\r\n                />  \r\n            </div>\r\n            {lVideo && placeHolder('two click on video')}\r\n            <div>\r\n                <span className={style.text}>\r\n                    Donwload story\r\n                </span>\r\n                <Switch\r\n                    checked={lStory}\r\n                    onChange={() => setDonwloadStory()}\r\n                />  \r\n            </div>\r\n            {lStory && placeHolder('two click on video')}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instagram;","import React , { Component } from 'react';\r\nimport style from './Main.module.sass';\r\n\r\nimport { main } from '../../Structure/index';\r\n\r\nimport Instagram from '../ControlComponents/Instagram/Instagram.js'\r\n\r\nclass Main extends Component{\r\n\r\n    structureParser(structure){\r\n        const result = [];\r\n        const { setPath } = this.props;\r\n        structure.forEach(item => {\r\n            const { title, path, gradient } = item;\r\n            result.push(\r\n                <li \r\n                    onClick={() => setPath(path)}\r\n                    style={gradient ? {background: `linear-gradient(${gradient})`} : ''}\r\n                    className={style.item}\r\n                >\r\n                    <i className=\"fab fa-instagram\"/>\r\n                    <span>\r\n                        {title}\r\n                    </span>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className={style.list}>\r\n                {result}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    switch(originPath){\r\n        const path = originPath.slice(1);\r\n        switch(path){\r\n            case 'instagram': {\r\n                return <Instagram />\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { path, clearPath } = this.props;\r\n        console.log('path === ', path)\r\n        return(\r\n            <div className={style.app}>\r\n                <div>\r\n                    {\r\n                     path && <i \r\n                        className=\"far fa-arrow-alt-circle-left\" \r\n                        style={{marginLeft: '12px', cursor: 'pointer'}}\r\n                        onClick={() => clearPath()}\r\n                     />\r\n                    }\r\n                    {!path && this.structureParser(main)}\r\n                </div>\r\n                {\r\n                    path && <div>\r\n                        {this.switch(path)}\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React , { Component } from 'react';\nimport style from './App.module.sass';\n\nimport Login from './components/Login/Login';\nimport Main from './components/Main/Main';\n\nclass App extends Component{\n    state = {\n        login: false,\n        path: []\n    }\n\n    setLogin(isLogined){\n        this.setState({\n            login: isLogined\n        })\n    }\n    setPath(path){\n        this.setState({\n            path: [path]\n        })\n    }\n\n    clearPath(){\n        this.setState({\n            path: []\n        })\n    }\n\n    render(){\n        const { login, path } = this.state;\n        return(\n            <div className={style.app}>\n                {\n                    login ?\n                    <Main \n                        path={path[0]}\n                        setPath={(path) => this.setPath(path)}\n                        clearPath={this.clearPath.bind(this)}\n                    /> :\n                    <Login setLogin={(isLogined) => this.setLogin(isLogined)}/>\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}